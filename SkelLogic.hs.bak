module SkelLogic where

-- Haskell module generated by the BNF converter

import AbsLogic
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transExp :: Exp -> Result
transExp x = case x of
  EImp exp1 exp2 -> failure x
  EEq exp1 exp2 -> failure x
  EAnd exp1 exp2 -> failure x
  EOr exp1 exp2 -> failure x
  EVar_a -> failure x
  EVar_b -> failure x
  EVar_c -> failure x
  EVar_d -> failure x
  EVar_e -> failure x
  EVar_f -> failure x
  EVar_g -> failure x
  EVar_h -> failure x
  EVar_i -> failure x
  EVar_j -> failure x
  EVar_k -> failure x
  EVar_l -> failure x
  EVar_m -> failure x
  EVar_n -> failure x
  EVar_o -> failure x
  EVar_p -> failure x
  EVar_r -> failure x
  EVar_s -> failure x
  EVar_t -> failure x
  EVar_u -> failure x
  EVar_w -> failure x
  EVar_y -> failure x
  EVar_z -> failure x
  EVar_x -> failure x

